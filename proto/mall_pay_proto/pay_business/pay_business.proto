syntax = "proto3";

package pay_business;

option go_package = "./;pay_business";

import "google/api/annotations.proto";
// pay_business
service PayBusinessService {
    // TradePay
    rpc TradePay(TradePayRequest) returns (TradePayResponse) {
        option (google.api.http) = {
            post: "/v1/trade/pay"
            body:"*"
        };
    }
    // CreateAccount
    rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/account/init"
            body:"*"
        };
    }
    // FindAccount
    rpc FindAccount(FindAccountRequest) returns (FindAccountResponse) {
        option (google.api.http) = {
            get: "/v1/account"
        };
    }
    // AccountCharge
    rpc AccountCharge(AccountChargeRequest) returns (AccountChargeResponse) {
        option (google.api.http) = {
            post: "/v1/account/charge"
            body:"*"
        };
    }
    // GetTradeUUID
    rpc GetTradeUUID(GetTradeUUIDRequest) returns(GetTradeUUIDResponse) {
        option (google.api.http) = {
            get: "/v1/trade/uuid"
        };
    }
}

enum RetCode {
    SUCCESS = 0;
    ERROR = 500;
    USER_NOT_EXIST = 50001;
    USER_EXIST = 50002;
    MERCHANT_NOT_EXIST = 50003;
    MERCHANT_EXIST = 50004;
    SHOP_NOT_EXIST = 50005;
    SHOP_EXIST = 50006;
    SKU_NOT_EXIST = 50007;
    SKU_EXIST = 50008;
    SKU_AMOUNT_NOT_ENOUGH = 50009;
    USER_BALANCE_NOT_ENOUGH = 600000;
    MERCHANT_BALANCE_NOT_ENOUGH = 6000001;
    ACCOUNT_LOCK = 6000002;
    MERCHANT_ACCOUNT_NOT_EXIST = 6000003;
    MERCHANT_ACCOUNT_STATE_LOCK = 6000004;
    USER_ACCOUNT_NOT_EXIST = 6000005;
    USER_ACCOUNT_STATE_LOCK = 6000006;
    DECIMAL_PARSE_ERR = 6000007;
    TRANSACTION_FAILED = 6000008;
    ACCOUNT_EXIST = 6000009;
    TRADE_PAY_RUN = 6000010;
    TRADE_PAY_SUCCESS = 6000011;
    TRADE_PAY_EXPIRE = 6000012;
    TRADE_ORDER_NOT_MATCH_USER = 6000013;
    USER_ACCOUNT_STATE_INVALID = 6000014;
    USER_CHARGE_RECORD_EXIST = 6000015;
    TRADE_UUID_EMPTY = 6000016;
}

enum OperationType {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
    AUDIT = 3;
    PUT_AWAY = 4;
}

enum CoinType {
    CNY = 0;
    USD = 1;
}

enum AccountType {
    Person = 0;
    Company = 1;
    System = 2;
}

message CommonResponse {
    RetCode code = 1;
    string msg = 2;
}

message FindAccountRequest {
    repeated string owner = 1; // must
    AccountType account_type = 2; // must
    CoinType coin_type = 3; // option
}

message FindAccountResponse {
    CommonResponse common = 1;
    repeated AccountEntry entry_list = 2;
}

message AccountChargeRequest {
    repeated string owner = 1; // must
    AccountType account_type = 2; // must
    CoinType coin_type = 3; // option
    string amount = 4; // amount
    string out_trade_no = 5;

    OperationMeta op_meta = 199;
}

message AccountChargeResponse {
    CommonResponse common = 1; // success or fail
}

enum TradeType {
    PAY = 0;
    CHARGE = 1;
}

message GetTradeUUIDRequest {
    TradeType trade_type = 1;
    string client_id = 2;
    int64 uid = 3;
}

message GetTradeUUIDResponse {
    CommonResponse common = 1;
    string uuid = 2;
}

message AccountEntry {
    string owner = 1;
    AccountType account_type = 2;
    CoinType coin_type = 3;
    string balance = 4;
}

message CreateAccountRequest {
    string owner = 1;
    AccountType account_type = 2;
    CoinType coin_type = 3;
    string balance = 4;
}

message CreateAccountResponse {
    CommonResponse common = 1;
    string account_code = 2;
}

message TradePayRequest {
    string account = 1; // account code
    CoinType coin_type = 2; // coin type
    repeated TradePayEntry entry_list = 11; // pay multi-pay entry
    int64 op_uid = 12;
    string op_ip = 13;
    string out_tx_code = 15; // out_tx_code
}

message TradePayEntry {
    string out_trade_no = 1; // out_trade_no
    string time_expire = 2; // expire time
    string notify_url = 3; // notify_url
    string description = 4; // description
    string merchant = 5; // merchant code
    string attach = 6; // attach

    TradeGoodsDetail detail = 199;
}

message OperationMeta {
    int64 op_uid = 1;
    string op_ip = 2;
    string op_platform = 3; // op platform
    string op_device = 4; // op device
}

message TradeGoodsDetail {
    string amount = 1; // amount
    string reduction = 2; // reduction
}

message TradePayResponse {
    CommonResponse common = 1;
    string trade_id = 2; // trade id
}


